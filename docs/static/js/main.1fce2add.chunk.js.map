{"version":3,"sources":["Components/AddCategory.js","Helpers/getGifs.js","Components/GifGridItem.js","Components/GifGrid.js","Hooks/useFetchGifs.js","Components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","InputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cates","console","log","type","value","onChange","target","getGif","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchsGifs","GifExpertApp","Categories","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEZC,mBAAS,KAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAqB5C,OACI,sBAAMC,SAdO,SAACC,GACnBA,EAAEC,iBACGJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAK,OAAMP,GAAN,mBAAqBO,OACzCN,EAAc,MAGlBO,QAAQC,IAAI,uBAOR,SACI,uBACAC,KAAK,OACLC,MAAOX,EACPY,SAtBc,SAACT,GACvBF,EAAeE,EAAEU,OAAOF,a,+BCNfG,EAAM,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEZC,EAFY,iDAEqCC,UAAWH,GAFhD,+DAGCI,MAAMF,GAHP,cAGZG,EAHY,gBAIGA,EAAKC,OAJR,uBAIXC,EAJW,EAIXA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVxB,kBAcXM,GAdW,4CAAH,sDCANO,EAAc,SAAC,GAAsB,IAArBJ,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAIpC,OAFAT,QAAQC,IAAIiB,EAAIC,EAAOV,GAGnB,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAKA,QCFJO,EAAU,SAAC,GAAgB,IAAD,ECHV,SAACnB,GAAc,IAAD,EAEbhB,mBAAS,CAC/BuB,KAAM,GACNa,SAAS,IAJ0B,mBAEhCC,EAFgC,KAEzBC,EAFyB,KA2BvC,OAnBCC,qBAAU,WAEPxB,EAAOC,GACFwB,MAAM,SAAAC,GAEPC,YAAW,WACPjC,QAAQC,IAAI+B,GACZH,EAAS,CACRf,KAAMkB,EACNL,SAAS,MAGX,WAIP,CAACpB,IAGEqB,EDrBwBM,CAHI,EAAd3B,UAGTa,EAHuB,EAG5BN,KAAaa,EAHe,EAGfA,QAIpB,OAHA3B,QAAQC,IAAI0B,GAKR,qCACSA,GAAW,mBAAGJ,UAAU,mCAAb,wBAEhB,qBAAKA,UAAU,aAAf,SAGQH,EAAOJ,KAAK,SAAAC,GAAG,OACf,cAAC,EAAD,eAEKA,GADAA,EAAIC,aElBhBiB,EAAe,WAAO,IAAD,EAEM5C,mBAAS,CAAC,MAFhB,mBAEvB6C,EAFuB,KAEX9C,EAFW,KAI9B,OACI,gCACI,oBAAIiC,UAAU,wCAAd,uBACA,cAAC,EAAD,CAAajC,cAAeA,IAC5B,uBAEI,6BAEQ8C,EAAWpB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEAA,SAAUA,GADLA,Y,MCdjC8B,IAASC,OAEL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAGJC,SAASC,eAAe,W","file":"static/js/main.1fce2add.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\nconst [InputValue, setInputValue] = useState(' ');\r\n\r\nconst handleInputChange = (e) => {\r\n    setInputValue( e.target.value );\r\n};\r\n\r\nconst handleSubmit = (e) => {\r\n   e.preventDefault();\r\n    if (InputValue.trim().length > 1) {\r\n        setCategories( cates => [ InputValue, ...cates]);\r\n        setInputValue(' ');\r\n    }\r\n\r\n    console.log('Formulario enviado');\r\n};\r\n\r\n\r\n\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} >\r\n            <input \r\n            type=\"text\"\r\n            value={InputValue}\r\n            onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\nexport const getGif = async(category) => {\r\n        \r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI (category)}&limit=18&api_key=UjitCkik1WP7j8rB3dcfR8tMNNVVvN4M`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img =>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    } )\r\n\r\n    return(gifs);\r\n};\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n    console.log(id, title, url);\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchsGifs } from '../Hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n\r\n    const {data:images, loading} = useFetchsGifs(category);\r\n    console.log(loading);\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n                {loading && <p className=\"animate__animated animate__flash\" >Loading...</p>}\r\n\r\n            <div className=\"card--grid\" >\r\n                \r\n                {\r\n                    images.map( img =>( \r\n                    <GifGridItem \r\n                    key={img.id}\r\n                    { ...img }\r\n                    />\r\n                    \r\n                ) )\r\n                \r\n                }\r\n\r\n\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { getGif } from '../Helpers/getGifs';\r\n\r\n\r\nexport const useFetchsGifs = (category) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n\r\n     useEffect(() => {\r\n         \r\n        getGif(category)\r\n            .then( imgs => {\r\n             \r\n            setTimeout(() => {\r\n                console.log(imgs);\r\n                setstate({\r\n                 data: imgs,\r\n                 loading: false\r\n             })\r\n                \r\n            }, 1500);\r\n            \r\n        });\r\n            \r\n     }, [category])\r\n\r\n\r\n    return state; // retorna el objeto data y loading\r\n   \r\n};\r\n","import React, {useState} from 'react'\r\nimport { AddCategory } from './AddCategory';\r\nimport { GifGrid } from './GifGrid';\r\n\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [Categories, setCategories] = useState([' ']);\r\n\r\n    return (\r\n        <div>\r\n            <h1 className=\"animate__animated animate__fadeInDown\"  >GiPhy App</h1>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n\r\n                <ol>\r\n                    {\r\n                        Categories.map( category =>(\r\n                            <GifGrid \r\n                            key={category}\r\n                            category={category}\r\n                            />\r\n                        ))\r\n                    }\r\n                </ol>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom';\r\nimport { GifExpertApp } from './Components/GifExpertApp';\r\nimport './Styles/main.css'\r\n\r\n\r\nReactDOM.render(\r\n\r\n    <React.StrictMode>\r\n        <GifExpertApp />\r\n    </React.StrictMode>,\r\n\r\n    document.getElementById('root')\r\n\r\n\r\n);"],"sourceRoot":""}